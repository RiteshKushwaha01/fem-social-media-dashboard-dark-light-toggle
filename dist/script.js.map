{"version":3,"sources":["script.js"],"names":["document","addEventListener","darkButton","getElementById","lightButton","querySelectorAll","forEach","button","event","checked","querySelector","classList","localStorage","setItem","window","matchMedia","matches","click","getItem"],"mappings":"AAAA,aAIAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAaF,SAASG,eAAe,QACrCC,EAAcJ,SAASG,eAAe,SA6BvBH,SAASK,iBAAiB,0BAClCC,SAAQ,SAACC,GACpBA,EAAON,iBAAiB,SAAS,SAACO,GAChCN,EAAWO,SA7BbT,SAASU,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,UAIlCb,SAASU,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,SAwBlC,GACF,IAIAC,OACGC,WAAW,gCACXd,iBAAiB,UAAU,SAACO,GAC3BA,EAAMQ,QAAUd,EAAWe,QAAUb,EAAYa,OACnD,IAjBU,UAZHL,aAAaM,QAAQ,eAIrBJ,OAAOC,WAAW,gCAAgCC,QACrD,OACA,UAMed,EAAWe,QAAUb,EAAYa,OAqBxD","file":"script.js","sourcesContent":["//\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const darkButton = document.getElementById('dark')\r\n  const lightButton = document.getElementById('light')\r\n\r\n  const setDarkMode = () => {\r\n    document.querySelector('body').classList = 'dark'\r\n    localStorage.setItem('colorMode', 'dark')\r\n  }\r\n\r\n  const setLightMode = () => {\r\n    document.querySelector('body').classList = 'light'\r\n    localStorage.setItem('colorMode', 'light')\r\n  }\r\n\r\n  const colorModeFromLocalStorage = () => {\r\n    return localStorage.getItem('colorMode')\r\n  }\r\n\r\n  const colorModeFromPreferences = () => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\r\n      ? 'dark'\r\n      : 'light' // If preference is set or does not match anything (light is default)\r\n  }\r\n\r\n  const loadAndUpdateColor = () => {\r\n    // local storage has precedence over the prefers-color-scheme\r\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences()\r\n    color === 'dark' ? darkButton.click() : lightButton.click()\r\n  }\r\n\r\n  // when the inputs are clicked, check which radio button is checked and change the color\r\n  const radioButtons = document.querySelectorAll('.toggle__wrapper input')\r\n  radioButtons.forEach((button) => {\r\n    button.addEventListener('click', (event) => {\r\n      darkButton.checked ? setDarkMode() : setLightMode()\r\n    })\r\n  })\r\n\r\n  // when the prefers-color-scheme changes, this event will be emitted\r\n  // event reflects the media query, if it matches, the new color is dark, else it is light\r\n  window\r\n    .matchMedia('(prefers-color-scheme: dark)')\r\n    .addEventListener('change', (event) => {\r\n      event.matches ? darkButton.click() : lightButton.click()\r\n    })\r\n\r\n  // Load the right color on startup - localStorage has precedence\r\n  loadAndUpdateColor()\r\n})\r\n"]}